"use strict";var S=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var U=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var q=Math.pow;var c=(i,e)=>()=>(i&&(e=i(i=0)),e);var m=(i,e)=>{for(var s in e)S(i,s,{get:e[s],enumerable:!0})},B=(i,e,s,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of U(e))!z.call(i,r)&&r!==s&&S(i,r,{get:()=>e[r],enumerable:!(t=G(e,r))||t.enumerable});return i};var d=i=>B(S({},"__esModule",{value:!0}),i);var u,b=c(()=>{"use strict";u=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,u.prototype)}}});var N,H,v,w,C,O=c(()=>{"use strict";b();N="A Sequence can only be made new from and Array of Sequence objects that share the same rest symbol and mode",H="Numbers must be integers",v="A self-similar melody can only be produced for an input sequence length that is coprime with the output sequence length",w=(i,e,s)=>s.indexOf(i)===e,C=(i,e)=>{if(!Number.isInteger(i)||!Number.isInteger(e))throw new u(H);let s=i>e?e:i;for(let t=2;t<=s;t++)if(i%t===0&&e%t===0)return!1;return!0}});var D={};m(D,{Rhythm:()=>g});var g,x=c(()=>{"use strict";y();g=class{constructor(e,s="wrap",t){this.steps=e,this.fillMode=s,this.length=t}applyTo(e){let s=this.steps.filter(o=>o!=0).length,t=Math.ceil(e.steps.length/s),r=new Array(t).fill(this.steps).flat();if(this.length!==void 0){if(this.length>r.length){let o=this.length-r.length;if(this.fillMode=="silence")r.push(...new Array(o).fill(0));else{let l=Math.ceil(o/this.steps.length);r.push(...new Array(l).fill(this.steps).flat())}}r=r.slice(0,this.length)}let n=0;return r.forEach((o,l)=>{o==1?(r[l]=e.steps[n%e.steps.length],n++):r[l]=e.restSymbol}),new h(r,e.restSymbol,e.melodicMode)}}});var L={};m(L,{Melody:()=>h,MelodyType:()=>I});var I,h,y=c(()=>{"use strict";b();O();x();I=(s=>(s.MIDI="MIDI",s.Degrees="Scale Degrees",s))(I||{}),h=class{constructor(e,s,t){this.steps=e===void 0?new Array:e,this.restSymbol=s===void 0?0:s,this.melodicMode=t==null?"Scale Degrees":t}clone(){return new h(this.steps,this.restSymbol,this.melodicMode)}static newFrom(e){let s=e.map(n=>n.restSymbol).filter(w),t=e.map(n=>n.melodicMode).filter(w);if(s.length>1||t.length>1)throw new u(N);let r=e.map(n=>n.steps).flat();return new h(r,e[0].restSymbol,e[0].melodicMode)}selfReplicate(e,s){if(s=s===void 0?2:s,!C(e,s))throw new u(v);let t=new Array(e).fill(-1);t[0]=this.steps[0],t[1]=this.steps[1];let r,n,o,l,p=t.findIndex(a=>a==-1),f=2;do{r=t.slice(0,p);for(let a=0;a<r.length;a++){n=r[a];for(let M=1;M<=Math.log2(e);M++)o=q(s,M),t[a*o%e]=n}l=this.steps[f%this.steps.length],p=t.findIndex(a=>a==-1),p!=-1&&(t[p]=l),f++}while(p!=-1);let E=this.clone();return E.steps=t,E}counted(){let e=new Array;for(let t=1;t<=this.steps.length;t++){let r=new Array(t).fill(1);r.push(0);let n=this.steps.length*(t+1);new g(r,"wrap",n).applyTo(this).steps.forEach(l=>e.push(l))}let s=this.clone();return s.steps=e,s}zigZag(){let e=this.steps.length%2==0?this.steps.length/2+1:Math.ceil(this.steps.length/2),s=this.steps.reduce((t,r,n)=>{let o=new Array(e).fill(-1).map((l,p)=>this.steps[(p+n)%this.steps.length]);return t.push(o),t.push(o.slice(1,e).reverse()),t},new Array).flat();return new h(s)}static infinitySeries(e=[0,1],s=16,t=0){let r=new h,n=e[0],l=e[1]-n;return r.steps=Array.from(new Array(s),(p,f)=>f+t).map(p=>n+h.norgardInteger(p)*l),r}static norgardInteger(e){return e.toString(2).split("").map(t=>parseInt(t)).reduce((t,r)=>(r==1?t+=1:t*=-1,t),0)}}});var _={};m(_,{MelodicVector:()=>A});var A,P=c(()=>{"use strict";y();A=class{constructor(e){this.steps=e}applyTo(e){let s=Math.ceil(e.steps.length/this.steps.length),t=new Array(s).fill(this.steps).flat().slice(0,e.steps.length),r=e.clone();return r.steps=t.map((n,o)=>e.melodicMode=="Scale Degrees"&&e.steps[o]==0?0:e.steps[o]==e.restSymbol?e.steps[o]:n+e.steps[o]),r}}});var j={};m(j,{LindenmayerSystem:()=>R});var R,k=c(()=>{"use strict";R=class{constructor(e){this.axiom=e,this.string=e,this.productionRules={}}add(e){this.productionRules[e.matchStr]=e.output}rules(){return Object.keys(this.productionRules)}advance(){this.string=this.string.split(" ").map(e=>e in this.productionRules?this.productionRules[e]:e).join(" ")}matrix(){let e=new Array;e.push(new Array);let s=0,t=0,r=[s,t];return this.string.split(" ").forEach((n,o)=>{n=="["?(r=[s,t],s=e.length,e.push(new Array),t-=1):n=="]"?(s=r[0],t=r[1]):(e[s][t]=n,t+=1)}),e}}});var Q={};m(Q,{MarkovChain:()=>T});var T,$=c(()=>{"use strict";T=class{constructor(e){this.input=e,this.stateTransitionMatrix=this.generateStm()}get(e,s){let t=this.stateTransitionMatrix.get(`${e}:${s}`)||[];return t[Math.floor(Math.random()*t.length)]}generateStm(){return this.input.steps.reduce((e,s,t,r)=>{if(t<r.length-1){let n=t==0?s:r[t-1],o=r[t+1],l=`${n}:${s}`,p=e.get(l)||new Array;p.push(o),e.set(l,p)}return e},new Map)}}});var F=(y(),d(L)),V=(P(),d(_)),Z=(x(),d(D)),J=(k(),d(j)),K=($(),d(Q));module.exports.MelodyType=F.MelodyType;module.exports.Melody=F.Melody;module.exports.MelodicVector=V.MelodicVector;module.exports.Rhythm=Z.Rhythm;module.exports.LindenmayerSystem=J.LindenmayerSystem;module.exports.MarkovChain=K.MarkovChain;
